<?xml version='1.0'?>
<!--
  Copyright (C) 2019  Rhys Mainwaring

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->
<sdf version='1.6'>
<model name='wing_sail'>
    <pose>0 0 0.05 0 0 0</pose>
    <static>false</static>

    <!-- Sail plugin 
        
        Linear approximations to lift / drag coefficient curves for NACA 0018 airfoil
        Foil stalls at approx. 14 degrees (lower in the linear approx.)    
    -->
    <plugin name="wing_sail_liftdrag" filename="libSailPlugin.so">
        <a0>0.0</a0>
        <cla>6.2832</cla>
        <alpha_stall>0.1592</alpha_stall>
        <cla_stall>-0.7083</cla_stall>
        <cda>0.63662</cda>
        <area>0.4858</area>
        <fluid_density>1.2</fluid_density>
        <forward>1 0 0</forward>
        <upward>0 1 0</upward>
        <cp>-0.05 0.0 0.65</cp>
        <link_name>wing_sail_link</link_name>
        <radial_symmetry>true</radial_symmetry>
        <topic>lift_drag</topic>
    </plugin>

    <!-- Gazebo / ROS plugins -->
    <!-- <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <robotNamespace>/</robotNamespace>
        <jointName>
            wing_sail_joint
        </jointName>
        <updateRate>50</updateRate>
        <alwaysOn>true</alwaysOn>
    </plugin> -->
    <!-- ground truth -->
    <plugin name="gazebo_ros_f3d" filename="libgazebo_ros_f3d.so">
        <robotNamespace>/</robotNamespace>
        <bodyName>wing_sail_link</bodyName>
        <topicName>/gazebo/f3d/wing_sail_link</topicName>
        <frameName>world</frameName>
        <updateRate>50</updateRate>
    </plugin>
    <!-- force torque sensor -->
    <plugin name="gazebo_ros_ft_sensor" filename="libgazebo_ros_ft_sensor.so">
        <robotNamespace>/</robotNamespace>
        <jointName>wing_sail_joint</jointName>
        <topicName>/gazebo/ft_sensor/wing_sail_joint</topicName>
        <gaussianNoise>0</gaussianNoise>
        <updateRate>50</updateRate>
    </plugin>

    <!-- ArduPilot plugin
        
        RC 4 Control (<control channel="3">)
        
        SERVO4_FUNCTION 128 (WingSailElevator)
        SERVO4_MIN 1000
        SERVO4_MAX 2000
        SERVO4_TRIM 1000

        SAIL_ANGLE_MIN 0
        SAIL_ANGLE_MAX 20

        input command in [0, 1]
        offset = -0.5
        multiplier radians(30) = 0.5235987755982988
        desired sail angle in [-30, 30] deg
    -->
    <!-- <plugin name="ardupilot_plugin" filename="libArduPilotPlugin.so">
        <fdm_addr>127.0.0.1</fdm_addr>
        <fdm_port_in>9002</fdm_port_in>
        <fdm_port_out>9003</fdm_port_out>
        <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>
        <modelXYZToAirplaneXForwardZDown>0 0 0 3.141593 0 0</modelXYZToAirplaneXForwardZDown>
        <gazeboXYZToNED>0 0 0 3.141593 0 0</gazeboXYZToNED>
        <imuName>base_link::imu_sensor</imuName>
        <control channel="3">
            <jointName>wing_sail_elevator_joint</jointName>
            <useForce>1</useForce>
            <multiplier>0.5235987755982988</multiplier>
            <offset>-0.5</offset>
            <type>POSITION</type>
            <p_gain>20</p_gain>
            <i_gain>0.1</i_gain>
            <d_gain>0</d_gain>
            <i_max>100</i_max>
            <i_min>-100</i_min>
            <cmd_max>1000</cmd_max>
            <cmd_min>-1000</cmd_min>
        </control>
    </plugin> -->

    <!-- Fix base to the world
    
        http://gazebosim.org/tutorials/?tut=ros_urdf#RigidlyFixingAModeltotheWorld
    -->
    <!-- <link name="world" />
    <joint type="fixed" name="base_link_joint">
        <parent>world</parent>
        <child>base_link</child>
    </joint> -->

    <!-- Base -->
    <link name="base_link">
        <visual name="base">
            <geometry>
                <box>
                    <size>0.5 0.5 0.1</size>
                </box>
            </geometry>
            <material>
                <script>
                    <name>Gazebo/Gray</name>
                </script>
            </material>
        </visual>
        <collision name="base">
            <geometry>
                <box>
                    <size>0.5 0.5 0.1</size>
                </box>
            </geometry>
        </collision>

        <visual name="imu_visual">
            <geometry>
                <box>
                    <size>0.04 0.04 0.01</size>
                </box>
            </geometry>
            <material>
                <script>
                    <name>Gazebo/Green</name>
                </script>
            </material>
        </visual>

        <sensor name='imu_sensor' type='imu'>
            <pose>0 0 0 3.141593 0 0</pose>
            <always_on>1</always_on>
            <update_rate>1000</update_rate>
            <visualize>1</visualize>
            <topic>sensors/imu</topic>
            <imu>
                <topic>sensors/imu</topic>
                <angular_velocity/>
                <linear_acceleration/>
            </imu>
        </sensor>

        <inertial>
            <mass>1000</mass>
            <inertia>
                <ixx>21.66666667</ixx>
                <ixy>0</ixy>
                <iyy>21.66666667</iyy>
                <iyz>0</iyz>
                <izz>41.666667</izz>
            </inertia>
        </inertial>
    </link>

    <!-- Wing sail -->
    <link name="wing_sail_link">
        <pose>0 0 0.05 0 0 0</pose>
        <visual name="wing_sail_visual">
            <geometry>
                <mesh>
                    <uri>model://land_yacht/meshes/wing_sail.stl</uri>
                </mesh>
            </geometry>
            <material>
                <script>
                    <name>Gazebo/GreyTransparent</name>
                </script>
            </material>
        </visual>

        <visual name="cp_wing_sail_visual">
            <pose>-0.05 0 0.65 0 0 0</pose>
            <geometry>
                <sphere><radius>0.01</radius></sphere>
            </geometry>
            <material>
                <script>
                    <name>Gazebo/Red</name>
                </script>
            </material>
        </visual>

        <collision name="wing_sail_collision">
            <geometry>
                <mesh>
                    <uri>model://land_yacht/meshes/wing_sail.stl</uri>
                </mesh>
            </geometry>
        </collision>

        <inertial>
            <pose>-0.05 0.0 0.65 0 0 0</pose>
            <mass>2.0</mass>
            <inertia>
                <ixx>0.326733333</ixx>
                <ixy>0</ixy>
                <iyy>0.348266667</iyy>
                <iyz>0</iyz>
                <izz>0.021666667</izz>
            </inertia>
        </inertial>
    </link>

    <joint type="fixed" name="wing_sail_joint">
        <pose> 0.5 0 0 0 0 0</pose>
        <child>wing_sail_link</child>
        <parent>base_link</parent>
        <sensor name="force_torque_sensor" type="force_torque">
            <always_on>true</always_on>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
        </sensor>
    </joint>

    <!-- <joint type="revolute" name="wing_sail_joint">
        <pose> 0.5 0 0 0 0 0</pose>
        <child>wing_sail_link</child>
        <parent>base_link</parent>
        <axis>
            <xyz>0 0 1</xyz>
            <initial_position>0</initial_position>
            <dynamics>
                <damping>0.01</damping>
            </dynamics>
        </axis>
        <sensor name="force_torque_sensor" type="force_torque">
            <always_on>true</always_on>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
        </sensor>
    </joint> -->

    <!-- Wing sail counterweight -->
    <!-- <link name="wing_sail_counterweight_link">
        <pose>0.65 0 0.70 0 0 0</pose>
        <visual name="wing_sail_counterweight_visual">
            <geometry>
                <sphere>
                    <radius>0.025</radius>
                </sphere>
            </geometry>
            <material>
                <script>
                    <name>Gazebo/Yellow</name>
                </script>
            </material>
        </visual>

        <collision name="wing_sail_elevator_collision">
            <geometry>
                <sphere>
                    <radius>0.025</radius>
                </sphere>
            </geometry>
        </collision>

        <inertial>
            <mass>0.1</mass>
            <inertia>
                <ixx>0.000025</ixx>
                <ixy>0</ixy>
                <iyy>0.000025</iyy>
                <iyz>0</iyz>
                <izz>0.00025</izz>
            </inertia>
        </inertial>
    </link>

    <joint type="fixed" name="wing_sail_counterweight_joint">
        <child>wing_sail_counterweight_link</child>
        <parent>wing_sail_link</parent>
    </joint> -->

</model>
</sdf>
